[project]
name = "optscale-api-modifier"
version = "0.1.0"
description = "Optscale API Modifier for SWO FinOps"
authors = [
    {name = "SoftwareOne"},
]
license = "Apache-2.0 license"
readme = "README.md"
requires-python = ">=3.12,<4"
dependencies = [
    "fastapi>=0.100.0,<1.0.0", # Fully compatible with Pydantic v2
    "sqlmodel>=0.0.8,<1.0.0", # Supports Pydantic v2
    "pydantic[email]>=2.9.2,<3.0.0",
    "python-dotenv<2.0.0,>=1.0.1",
    "httpx<1.0.0,>=0.27.2",
    "pydantic-settings<3.0.0,>=2.6.0",
    "uvicorn<1.0.0,>=0.32.0",
    "python-json-logger<3.0.0,>=2.0.7",
    "pyjwt<3.0.0,>=2.9.0",
    "python-decouple<4.0,>=3.8",
    "setuptools<76.0.0,>=75.2.0",
    "pydevd<4.0.0,>=3.2.2",
    "currency-codes<24.0.0,>=23.6.4",
    "pytest>=8.3.3",
]

[tool.uv]
dev-dependencies = [
    "ipdb>=0.13",
    "mypy>=1.8",
    "pre-commit>=3.6",
    "pytest>=8.3.3",
    "pytest-asyncio>=0.24.0",
    "pytest-mock>=3.14.0",
    "pytest-cov>=6.0.0",
    "pytest-deadfixtures>=2.2",
    "ruff>=0.3",
    "fastapi[standard]>=0.115.4",
]


[tool.pytest.ini_options]
testpaths = "tests"
pythonpath = "."
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "session"

[tool.coverage.run]
branch = true

[tool.ruff]
extend-exclude = [".devcontainer"]
output-format = "full"

[tool.ruff.lint]

select = [
    "E",  # w errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade,
    "PT",  # flake8-pytest-style
    "T10",  # flake8-pytest-style
]
ignore = [
    "PT001", # Use `@pytest.fixture()` over `@pytest.fixture`
    "PT004", # fixture '{name}' does not return anything, add leading underscore
    "PT011", # pytest.raises({exception}) is too broad, set the match parameter or use a more specific exception
    "PT023", # @pytest.mark.parametrize` is missing required arguments
    "B008",  # do not perform function calls in argument defaults
    "B904",  # Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
]

[tool.ruff.lint.pycodestyle]
max-line-length = 100

[tool.mypy]
warn_no_return = false
