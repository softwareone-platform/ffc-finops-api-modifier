[tool.poetry]
name = "optscale-api-modifier"
version = "0.1.0"
description = ""
authors = ["Antonio Di Mariano <antonio.dimariano@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.12,<4"
fastapi = "^0.115.3"
python-dotenv = "^1.0.1"
httpx = "^0.27.2"
pydantic-settings = "^2.6.0"
uvicorn = "^0.32.0"
python-json-logger = "^2.0.7"
pyjwt = "^2.9.0"
python-decouple = "^3.8"
setuptools = "^75.2.0"
cython = "^3.0.11"
pydevd = "^3.2.2"
wheel = "^0.44.0"

sqlmodel = "^0.0.22"
currency-codes = "^23.6.4"
pydantic = {extras = ["email"], version = "^2.9.2"}
greenlet = "^3.1.1"
exceptiongroup = "^1.1.0"


[tool.poetry.group.dev.dependencies]
#freezegun = "1.4.*"
#ipdb = "0.13.*"
#mypy = "1.8.*"
poetry-plugin-sort = "0.2.*"
pre-commit = "3.6.*"

pytest = "^8.3.3"
pytest-asyncio = "^0.24.0"
pytest-mock = "^3.14.0"
pytest-cov = "^6.0.0"

#pytest-cov = "4.1.*"
#pytest-deadfixtures = "2.2.*"
#pytest-django = "4.7.*"
#pytest-mock = "3.12.*"
#pytest-randomly = "3.15.*"
#pytest-xdist = "3.5.*"
#responses = "0.24.*"
ruff = "0.3.*"
#types-requests = "2.31.*"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = "tests"
pythonpath = "."
python_files = "tests.py test_*.py *_tests.py"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "session"

[tool.coverage.run]
branch = true

[tool.ruff]
extend-exclude = [".vscode", ".devcontainer", "swo"]
output-format = "full"

[tool.ruff.lint]

select = [
    "E",  # w errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade,
    "PT",  # flake8-pytest-style
    "T10",  # flake8-pytest-style
]
ignore = [
    "PT004", # fixture '{name}' does not return anything, add leading underscore
    "PT011", # pytest.raises({exception}) is too broad, set the match parameter or use a more specific exception
    "B008",  # do not perform function calls in argument defaults
    "B904",  # Within an `except` clause, raise exceptions with `raise ... from err` or `raise ... from None` to distinguish them from errors in exception handling
]

[tool.ruff.lint.isort]
known-third-party = ["swo"]

[tool.ruff.lint.pycodestyle]
max-line-length = 100
